{% set redisPassword = pillar['authentication']['securePassword'] %}
{% set redisNodes = pillar['redisNodes'] %}
{% set mysqlHosts = pillar['nodes_v2']  %}
global
    maxconn 100000
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    option  tcplog
    option  dontlognull
    retries 3
    redispatch
    maxconn 100000
    backlog 32768
    timeout connect 5000
    timeout server 15000
    timeout client 15000

frontend redis-read-frontend
    mode tcp
    bind *:6389
    default_backend redis-read-backend

backend redis-read-backend
    mode tcp
    balance roundrobin
    option tcp-check
    option  log-health-checks
    {% if redisPassword -%}
    tcp-check send AUTH\ {{ redisPassword }}\r\n
    tcp-check expect string +OK
    {%- endif %}
    tcp-check send PING\r\n
    tcp-check expect string +PONG 
    tcp-check send info\ replication\r\n
    tcp-check expect string role:slave
    tcp-check send exit\r\n

    {% for node in redisNodes %}
    server {{ node['name'] }} {{ node['host'] }}:6379 check inter 2000 maxconn 10000 rise 5 fall 3
    {% endfor %}

frontend redis-write-frontend
    mode tcp
    bind *:6390
    default_backend redis-write-backend

backend redis-write-backend
    mode tcp
    balance roundrobin
    option tcp-check
    option  log-health-checks
    {% if redisPassword %}
    tcp-check send AUTH\ {{ redisPassword }}\r\n
    tcp-check expect string +OK
    {% endif %}
    tcp-check send PING\r\n
    tcp-check expect string +PONG 
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send exit\r\n

    {% for node in redisNodes %}
    server {{ node['name'] }} {{ node['host'] }}:6379 check inter 2000 maxconn 10000 rise 5 fall 3
    {% endfor %}

frontend mysql-write-frontend
    mode tcp
    bind *:3308
    default_backend mysql-write-backend


backend mysql-write-backend
    mode tcp
    balance leastconn
    option tcp-check
    option log-health-checks

    {% for node in mysqlHosts %}
    {% if node['role'] == 'master' %}
    server {{ node['name'] }} {{ node['host'] }}:3306 check inter 1000 maxconn 250 rise 10 fall 4
    {% endif %}
    {% endfor %}

frontend mysql-read-frontend
    mode tcp
    bind *:3307
    default_backend mysql-write-backend

backend mysql-read-backend
    mode tcp
    balance leastconn
    option tcp-check
    option log-health-checks

    {% for node in mysqlHosts %}
    {% if node['role'] != 'master' %}
    server {{ node['name'] }} {{ node['host'] }}:3306 check inter 1000 maxconn 250 rise 10 fall 4
    {% endif %}
    {% endfor %}